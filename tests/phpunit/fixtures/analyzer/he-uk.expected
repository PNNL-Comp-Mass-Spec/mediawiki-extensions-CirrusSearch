{
    "analyzer": {
        "he_plain": {
            "char_filter": [
                "nnbsp_norm",
                "word_break_helper"
            ],
            "filter": [
                "icu_normalizer",
                "preserve_original_recorder",
                "icu_folding",
                "preserve_original",
                "remove_empty"
            ],
            "tokenizer": "standard",
            "type": "custom"
        },
        "he_plain_search": {
            "char_filter": [
                "nnbsp_norm",
                "word_break_helper"
            ],
            "filter": [
                "icu_normalizer"
            ],
            "tokenizer": "standard",
            "type": "custom"
        },
        "he_text": {
            "char_filter": [
                "nnbsp_norm",
                "apostrophe_norm",
                "split_camelCase",
                "acronym_fixer",
                "word_break_helper"
            ],
            "filter": [
                "niqqud",
                "hebrew_lemmatizer",
                "remove_duplicates",
                "icu_normalizer",
                "icu_folding",
                "remove_empty"
            ],
            "tokenizer": "hebrew",
            "type": "custom"
        },
        "he_text_search": {
            "char_filter": [
                "nnbsp_norm",
                "apostrophe_norm",
                "split_camelCase",
                "acronym_fixer",
                "word_break_helper"
            ],
            "filter": [
                "niqqud",
                "hebrew_lemmatizer",
                "remove_duplicates",
                "icu_normalizer",
                "icu_folding",
                "remove_empty"
            ],
            "tokenizer": "hebrew",
            "type": "custom"
        },
        "uk_plain": {
            "char_filter": [
                "nnbsp_norm",
                "word_break_helper"
            ],
            "filter": [
                "icu_normalizer"
            ],
            "tokenizer": "standard",
            "type": "custom"
        },
        "uk_plain_search": {
            "char_filter": [
                "nnbsp_norm",
                "word_break_helper"
            ],
            "filter": [
                "icu_normalizer"
            ],
            "tokenizer": "standard",
            "type": "custom"
        },
        "uk_text": {
            "type": "ukrainian"
        },
        "uk_text_search": {
            "type": "ukrainian"
        }
    },
    "char_filter": {
        "acronym_fixer": {
            "pattern": "(?<=(?:^|[^\\p{L}\\p{M}\\p{Cf}])[\\p{M}\\p{Cf}]{0,9}+\\p{L}[\\p{M}\\p{Cf}]{0,9}+)[.\uff0e]\\p{Cf}*+(\\p{L}[\\p{M}\\p{Cf}]*+)(?=\\P{L}|$)",
            "replacement": "$1",
            "type": "pattern_replace"
        },
        "apostrophe_norm": {
            "mappings": [
                "`=>'",
                "\u00b4=>'",
                "\u02b9=>'",
                "\u02bb=>'",
                "\u02bc=>'",
                "\u02bd=>'",
                "\u02be=>'",
                "\u02bf=>'",
                "\u02cb=>'",
                "\u055a=>'",
                "\\u05F3=>'",
                "\u2018=>'",
                "\u2019=>'",
                "\u201b=>'",
                "\u2032=>'",
                "\u2035=>'",
                "\ua78c=>'",
                "\uff07=>'",
                "\uff40=>'"
            ],
            "type": "mapping"
        },
        "nnbsp_norm": {
            "mappings": [
                "\\u202F=>\\u0020"
            ],
            "type": "mapping"
        },
        "split_camelCase": {
            "pattern": "(?<=\\p{Ll}[\\p{M}\\p{Cf}]{0,9}+)(\\p{Lu})",
            "replacement": " $1",
            "type": "pattern_replace"
        },
        "word_break_helper": {
            "mappings": [
                "_=>\\u0020",
                ":=>\\u0020",
                ".=>\\u0020",
                "(=>\\u0020",
                ")=>\\u0020",
                "\uff0e=>\\u0020",
                "\uff3f=>\\u0020",
                "\uff1a=>\\u0020"
            ],
            "type": "mapping"
        }
    },
    "filter": {
        "icu_folding": {
            "type": "icu_folding"
        },
        "icu_normalizer": {
            "name": "nfkc_cf",
            "type": "icu_normalizer"
        },
        "remove_empty": {
            "min": 1,
            "type": "length"
        }
    },
    "tokenizer": []
}